name: Complete pipeline

on:
    push:
    pull_request:
        types:
            - ready_for_review

concurrency:
    group: ci-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        timeout-minutes: 5
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: '18'
            - name: Cache node modules and shared/dist
              id: cache-build
              uses: ./.github/actions/cache-build
            - name: Setup project
              if: ${{ steps.cache-build.outputs.node-modules-cache-hit != 'true' }}
              run: npm run setup:ci
            - name: Build shared
              run: cd shared && npm run build && cd ..

    lint:
        timeout-minutes: 5
        runs-on: ubuntu-latest

        needs: build

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: '18'
            - name: Cache node modules and shared/dist
              uses: ./.github/actions/cache-build
            - name: Run Prettier
              if: always()
              run: npm run prettier:check

    # Dummy step to gate until all test are complete
    tests-done:
        if: always()
        needs:
            - lint
        runs-on: ubuntu-latest
        steps:
            - uses: matrix-org/done-action@v2
              with:
                  needs: ${{ toJSON (needs) }}

    release-main:
        timeout-minutes: 2
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        needs: tests-done
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v3
            - name: Initialize mandatory git config
              run: |
                  git config user.name "GitHub Actions"
                  git config user.email noreply@github.com
            - uses: ./.github/actions/extract-version
            - name: Extract release notes
              id: extract_release_notes
              uses: ffurrer2/extract-release-notes@v1
            - name: Create release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ env.VERSION_NAME }}
                  name: v${{ env.VERSION_NAME }}
                  body: ${{ steps.extract_release_notes.outputs.release_notes }}
